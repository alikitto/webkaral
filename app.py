from flask import Flask, render_template, request, jsonify
import requests
import os
import base64

app = Flask(__name__)

# WooCommerce API –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
WC_API_URL = os.getenv("WC_API_URL", "https://karal.az/wp-json/wc/v3")
WC_CONSUMER_KEY = os.getenv("WC_CONSUMER_KEY")
WC_CONSUMER_SECRET = os.getenv("WC_CONSUMER_SECRET")

# WordPress User Auth (–¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π)
WP_USERNAME = "alikitto"  # –ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è WordPress
WP_PASSWORD = "HsbD 0gjV hsj0 Fb1K XrMx 4nLQ"  # Application Password
AUTH_HEADER = {
    "Authorization": "Basic " + base64.b64encode(f"{WP_USERNAME}:{WP_PASSWORD}".encode()).decode()
}

# –§—É–Ω–∫—Ü–∏—è –∑–∞–≥—Ä—É–∑–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ WordPress Media Library
def upload_image(image):
    files = {'file': image}
    url = f"{WC_API_URL}/wp/v2/media"
    
    response = requests.post(url, headers=AUTH_HEADER, files=files)
    
    if response.status_code == 201:
        return response.json().get("source_url")  # –í–æ–∑–≤—Ä–∞—â–∞–µ–º URL –∑–∞–≥—Ä—É–∂–µ–Ω–Ω–æ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
    else:
        return None  # –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏

@app.route("/")
def home():
    return render_template("index.html")

@app.route("/add-product", methods=["POST"])
def add_product():
    try:
        category_id = request.form.get("category")
        weight = request.form.get("weight")
        gold_purity = request.form.get("gold_purity")
        price = request.form.get("price")
        sale_price = request.form.get("sale_price", "0")
        image = request.files.get("image")  # –ó–∞–≥—Ä—É–∂–µ–Ω–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ

        # –ó–∞–≥—Ä—É–∑–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ WordPress
        image_url = upload_image(image) if image else None
        if not image_url:
            return jsonify({"status": "error", "message": "‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è"}), 400

        # –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –≥–µ–Ω–µ—Ä–∞—Ü–∏—è –Ω–∞–∑–≤–∞–Ω–∏—è –∏ slug
        category_names = {
            "126": "Qƒ±zƒ±l √ºz√ºk",
            "132": "Qƒ±zƒ±l sƒ±rƒüa",
            "140": "Qƒ±zƒ±l sep",
            "138": "Qƒ±zƒ±l qolbaq",
            "144": "Qƒ±zƒ±l d…ôst komplekt"
        }
        product_name = category_names.get(category_id, "Qƒ±zƒ±l m…ôhsul")
        product_slug = product_name.lower().replace(" ", "-")

        # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å–ª—É—á–∞–π–Ω–æ–≥–æ –æ–ø–∏—Å–∞–Ω–∏—è
        descriptions = [
            "üîπ Yeni qƒ±zƒ±l √ºz√ºk modeli. Z…ôrif dizaynƒ± il…ô g√ºnd…ôlik v…ô x√ºsusi g√ºnl…ôr √º√ß√ºn ideal se√ßim! ‚ú®",
            "üíç Z√∂vql√º dizayn v…ô y√ºks…ôk keyfiyy…ôt! Bu unikal qƒ±zƒ±l √ºz√ºk z…ôrifliyi v…ô inc…ôliyi il…ô se√ßilir. ‚ú®",
            "‚ú® Qƒ±zƒ±lƒ±n …ôb…ôdi g√∂z…ôlliyi! Z…ôriflik, inc…ôlik v…ô y√ºks…ôk keyfiyy…ôt ‚Äì bu qƒ±zƒ±l √ºz√ºk h…ôr anƒ±nƒ±zƒ± daha x√ºsusi ed…ôc…ôk."
        ]
        description = descriptions[int(weight) % len(descriptions)]  # –í—ã–±–∏—Ä–∞–µ–º —Å–ª—É—á–∞–π–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ

        # –î–∞–Ω–Ω—ã–µ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ç–æ–≤–∞—Ä–∞
        product_data = {
            "name": product_name,
            "slug": f"{product_slug}-{int(weight)}",
            "type": "simple",
            "regular_price": price,
            "sale_price": sale_price if sale_price != "0" else None,
            "categories": [{"id": int(category_id)}],
            "description": description,
            "images": [{"src": image_url}],
            "attributes": [
                {
                    "id": 2,  # ID –∞—Ç—Ä–∏–±—É—Ç–∞ ∆èyar
                    "options": [gold_purity],  # –ó–Ω–∞—á–µ–Ω–∏–µ –∞—Ç—Ä–∏–±—É—Ç–∞ (585, 750 –∏ —Ç. –¥.)
                    "visible": True
                }
            ],
            "weight": weight  # –í–µ—Å —Ç–æ–≤–∞—Ä–∞
        }

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –≤ WooCommerce
        url = f"{WC_API_URL}/products"
        params = {
            "consumer_key": WC_CONSUMER_KEY,
            "consumer_secret": WC_CONSUMER_SECRET
        }
        response = requests.post(url, json=product_data, params=params)

        if response.status_code == 201:
            product_id = response.json().get("id")
            product_link = f"https://karal.az/product/{product_slug}-{product_id}/"
            return jsonify({"status": "success", "message": "‚úÖ –¢–æ–≤–∞—Ä —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω!", "link": product_link})
        else:
            return jsonify({"status": "error", "message": "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ —Ç–æ–≤–∞—Ä–∞.", "details": response.text}), 400

    except Exception as e:
        return jsonify({"status": "error", "message": str(e)}), 500

if __name__ == "__main__":
    app.run(debug=True, host="0.0.0.0", port=8080)
